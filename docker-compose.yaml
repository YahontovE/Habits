version: '3'

services:

  redis:
    image: redis:alpine
    healthcheck:
      test: [ "CMD", "redis-cli", "ping" ]
      interval: 10s
      timeout: 5s
      retries: 3

  db:
    image: postgres
    environment:
      - PG_DATA=/var/lib/postgresql/data
      - POSTGRES_PASSWORD=${DATABASE_PASSWORD}
      - POSTGRES_USER=${DATABASE_USER}
      - POSTGRES_DB=${DATABASE_NAME}

    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres" ]
      interval: 10s
      timeout: 5s
      retries: 3
    volumes:
      - postgres_data:/var/lib/postgresql/data

  web:
    tty: true
    build: .
    command: bash -c 'python manage.py migrate && python manage.py runserver 0.0.0.0:8000'
    volumes:
      - .:/app
    ports:
      - '8000:8000'
    depends_on:
      db:
        condition: service_healthy

  celery:
    build: .
    tty: true
    command: celery -A config worker -l info
    volumes:
      - .:/app
    depends_on:
      - redis
      - web
    healthcheck:
      test: ['CMD', 'celery', 'inspect', 'ping']
      interval: 10s
      timeout: 5s
      retries: 3

  celery-beat:
    build: .
    tty: true
    command: celery -A config beat -l info -S django
    volumes:
      - .:/app
    depends_on:
      - db
      - web
      - celery

volumes:
  postgres_data: